#ifndef BMP_HPP
#define BMP_HPP

//////////////////////////////////////////////
//GetBmpwidth - function to get the Bmpwidth//
//////////////////////////////////////////////
int GetBmpwidth(unsigned char tempbmpfile[]);
////////////////////////////////////////////////
//GetBmpheight - function to get the Bmpheight//
////////////////////////////////////////////////
int GetBmpheight(unsigned char tempbmpfile[]);
///////////////////////////////////////////////
//CheckBmpSizes - Check if all sizes are even//
///////////////////////////////////////////////
bool CheckBmpSizes(int bmpwidth, int bmpheight);
//////////////////////////////////////////////////////////////////////
//CalcExtraBytes - Calculate bytes I need to ignore if bmpwidth%8!=0//
//////////////////////////////////////////////////////////////////////
int CalcExtraBytes(int bmpwidth);
//////////////////////////////////////////////////////////////////////////////
//TranslateBMPtoSWD - Translates the bmp file to more usefull s2 information//
//////////////////////////////////////////////////////////////////////////////
void TranslateBMPtoSWD(unsigned char tempbmpfile[], unsigned char bmpinfo[], unsigned long int bmpwidth, unsigned long int bmpheight,int extrabytes);
////////////////////////////////////////////////////////////////////////////////////////
//TranslateBMPNumbertoTexture - Translates a number given by the swd file to a texture//
////////////////////////////////////////////////////////////////////////////////////////
unsigned char TranslateBMPNumbertoTexture(int information);
//////////////////////////////////////////////////
//ConvertBMPtoSWD - Converts the bmp info to swd//
//////////////////////////////////////////////////
void ConvertBMPtoSWD(unsigned char tempmapfile[], unsigned char bmpinfo[],int mapwidth,int mapheight);
////////////////////////////////////////////////////////
//CheckFileSizes - Checks if BMP size and SWD size fit//
////////////////////////////////////////////////////////
bool CheckFileSizes(int mapwidth, int bmpwidth, int mapheight, int bmpheight);
//////////////////////////////////////////////////////////////////////
//getCurrentTexture - Which texture is drawn now (first,second etc.)//
//////////////////////////////////////////////////////////////////////
unsigned char getCurrentTexture(int round);

#endif